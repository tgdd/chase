### Starting build.
# Target: Fol.ml.depends, tags: { extension:ml, file:Fol.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules Fol.ml > Fol.ml.depends # cached
# Target: FolLexer.mll, tags: { extension:mll, file:FolLexer.mll, lexer, ocaml, ocamllex, quiet }
/usr/local/bin/ocamllex.opt -q FolLexer.mll # cached
# Target: FolLexer.ml.depends, tags: { extension:ml, file:FolLexer.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules FolLexer.ml > FolLexer.ml.depends # cached
# Target: FolParser.mly, tags: { extension:mly, file:FolParser.mly, ocaml, ocamlyacc, parser, quiet }
/usr/local/bin/ocamlyacc FolParser.mly # cached
# Target: FolParser.mli.depends, tags: { extension:mli, file:FolParser.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules FolParser.mli > FolParser.mli.depends # cached
# Target: FolSyntax.mli.depends, tags: { extension:mli, file:FolSyntax.mli, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules FolSyntax.mli > FolSyntax.mli.depends # cached
# Target: FolSyntax.cmi, tags: { byte, compile, extension:mli, file:FolSyntax.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -I +ocamlgraph -I util -o FolSyntax.cmi FolSyntax.mli # cached
# Target: FolParser.cmi, tags: { byte, compile, extension:mli, file:FolParser.mli, interf, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -I +ocamlgraph -I util -o FolParser.cmi FolParser.mli # cached
# Target: util/LexUtil.ml.depends, tags: { extension:ml, file:util/LexUtil.ml, ocaml, ocamldep, quiet }
/usr/local/bin/ocamldep.opt -modules util/LexUtil.ml > util/LexUtil.ml.depends # cached
# Target: util/LexUtil.cmo, tags: { byte, compile, extension:ml, file:util/LexUtil.ml, implem, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -I +ocamlgraph -I util -o util/LexUtil.cmo util/LexUtil.ml # cached
# Target: FolLexer.cmo, tags: { byte, compile, extension:ml, file:FolLexer.ml, implem, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -I +ocamlgraph -I util -o FolLexer.cmo FolLexer.ml # cached
# Target: Fol.cmo, tags: { byte, compile, extension:ml, file:Fol.ml, implem, ocaml, quiet }
/usr/local/bin/ocamlc.opt -c -I +ocamlgraph -I util -o Fol.cmo Fol.ml # cached
# Compilation successful.
